/*
//
// Aim : To take two read signals as inputs to a multiplexer, which is selcted from by a third read signal.
//
// Explanation: 
//
*/

$TestApp = {
    Class = RealTimeApplication
    +Functions = {
        Class = ReferenceContainer

        +Clock = {
            Class = IOGAM
            InputSignals = {
                Counter = {
                    DataSource = Timer
                    Type = uint32
                }
                Time = {
                    Frequency = 1
                    DataSource = Timer
                    Type = uint32
                }
            }
            OutputSignals = {
                Counter = {
                    DataSource = DDB1
                    Type = uint32
                }                
                Time = {
                    DataSource = DDB1
                    Type = uint32
                }
            }
        }

        +Constants = {
            Class = ConstantGAM
            OutputSignals = {
                In0 = {
                    DataSource = DDB1
                    Type = uint32
                    Default = 1
                }
                In1 = {
                    DataSource = DDB1
                    Type = uint32
                    Default = 2
                }
            }
        }

        +ReadSel = {
            Class = IOGAM
            InputSignals = {
                Sel = {
                    DataSource = FileReader
                    Type = uint32
                }
            }
            OutputSignals = {
                Sel = {
                    DataSource = DDB1
                    Type = uint32
                }
            }
        }

	+Mux = {
	    Class = MuxGAM
	    InputSignals = {
		Sel = {
		    DataSource = DDB1
		    Type = uint32
		    NumberOfElements = 1
		    NumberOfDimensions = 1
		    Samples = 1
		}
	        In0 = {
		    DataSource = DDB1
		    Type = uint32
		    NumberOfElements = 1
		    NumberOfDimensions = 1
		    Samples = 1
		}
		In1 = {
		    DataSource = DDB1
		    Type = uint32
		    NumberOfElements = 1
		    NumberOfDimensions = 1
		    Samples = 1
		}
	    }
	    OutputSignals = {
		Out = {
		    DataSource = DDB1
		    Type = uint32
		    NumberOfElements = 1
		    NumberOfDimensions = 1
		    Samples = 1
		}
	    }
	}

        +Print = {
	    Class = IOGAM
	    InputSignals = {
		Out = {
		    DataSource = DDB1
		    Type = uint32
		}
	    }
	    OutputSignals = {
		Out = {
		    DataSource = LoggerDataSource
		    Type = uint32
		}
	    }
	}
    }

    +Data = {
        Class = ReferenceContainer
        DefaultDataSource = DDB1
        +DDB1 = {
            Class = GAMDataSource
        }        
        +LoggerDataSource = {
            Class = LoggerDataSource
        }
        +Timings = {
            Class = TimingDataSource
        }
        +Timer = {
            Class = LinuxTimer
            SleepNature = "Default"
            ExecutionMode = RealTimeThread
            Signals = {
                Counter = {
                    Type = uint32
                }
                Time = {
                    Type = uint32
                }
            }
        }        

	+FileReader = {
            Class = FileDataSource::FileReader
            Filename = "/MARTe-demos/mux/Sel.csv"
	    Interpolate = "no"
            FileFormat = "csv"
            CSVSeparator = ","
            EOF = "Rewind"
            Preload = "no"
        }
   }
    +States = {
        Class = ReferenceContainer
        +Run = {
            Class = RealTimeState
            +Threads = {
                Class = ReferenceContainer
                +Thread1 = {
                    Class = RealTimeThread
                    CPUs = 0x1
                    Functions = {Clock Constants ReadSel Mux Print}
                }
            }
        }
    }

    +Scheduler = {
        Class = GAMScheduler
        TimingDataSource = Timings
    }
}
