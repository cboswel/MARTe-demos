/*
// File : STapp-0004-1-0004-Waveform-1.cfg
//
// Changelog
//
// 2022-01-16 Basic demonstration of waveform generation piped to signals writer as csv
//
//
*/
$TestApp = {
    Class = RealTimeApplication
    +Functions = {
        Class = ReferenceContainer
        +GAMTimer = {
            Class = IOGAM
            InputSignals = {
                Counter = {
                    DataSource = Timer
                    Type = uint32
                }
                Time = {
                    Frequency = 1
                    DataSource = Timer
                    Type = uint32
                }
            }
            OutputSignals = {
                Counter = {
                    DataSource = DDB1
                    Type = uint32
                }
                Time = {
                    DataSource = DDB1
                    Type = uint32
                }
            }
        }

        +GAMDisplay = {
	    Class = IOGAM
	    InputSignals = {
		MDSOut = {
		    DataSource = DDB1
		    Type = uint32
		    NumberOfElements = 200
		}
	    }
	    OutputSignals = {
		MDSOut = {
		    DataSource = LoggerDataSource
		    Type = uint32
		    NumberOfElements = 200
		}
	    }
	}

	+GAMReader = {
	    Class = IOGAM
	    InputSignals = {
		MDSOut = {
		    DataSource = MDSReader
		    Type = uint32
		    NumberOfElements = 200
		}
		Time = {
		    DataSource = MDSReader
		    Type = uint32
		}
	    }
	    OutputSignals = {
		MDSOut = {
		    DataSource = DDB1
		    Type = uint32
		    NumberOfElements = 200
		}
		times = {
		    DataSource = DDB1
		    Type = uint32
		}
	    }
	}
    }
    +Data = {
        Class = ReferenceContainer
        DefaultDataSource = DDB1
        +DDB1 = {
            Class = GAMDataSource
        }
        +LoggerDataSource = {
            Class = LoggerDataSource
        }
        +Timings = {
            Class = TimingDataSource
        }
        +Timer = {
            Class = LinuxTimer
            SleepNature = "Default"
            ExecutionMode = RealTimeThread
            Signals = {
                Counter = {
                    Type = uint32
                }
                Time = {
                    Type = uint32
                }
            }
        }

	+MDSReader = {
	    Class = MDSReader
	    TreeName = "marte_mds"
	    ShotNumber = 0 //Compulsory. 0 --> last shot number (to use 0 shotid.sys must exist)
 	    Frequency = 1 // in Hz. Is the cycle time of the real time application.
 
 	    Signals = {
 		MDSOut = {
 		    NodeName = "MDStest" // node of the tree node
 		    Type = "uint32" //Can be any of the node supported types
 		    NumberOfElements = 200
 		    DataManagement = 0 //could be 0, 1 or 2
 		    HoleManagement = 1 //could be 0 or 1
 		}
 		Time = { //Compulsory
 		    Type = "uint32" //can be any of the supported types
 		    NumberOfElements = 1 //must be always one.
 		}
	    }
	}
    }

    +States = {
        Class = ReferenceContainer
        +Run = {
            Class = RealTimeState
            +Threads = {
                Class = ReferenceContainer
                +Thread1 = {
                    Class = RealTimeThread
                    CPUs = 0x1
                    Functions = {GAMTimer GAMReader GAMDisplay}
                }
            }
        }
    }
    +Scheduler = {
        Class = GAMScheduler
        TimingDataSource = Timings
    }
}
