$TestApp = {
    Class = RealTimeApplication
    +Functions = {
        Class = ReferenceContainer
        +GAMUDP = {
            Class = IOGAM
	    NumberOfBuffers = 20000
            InputSignals = {
                Times = {
                    DataSource = UDPReceiver
                    Type = uint32
		    NumberOfDimensions = 1
		    NumberOfElements = 1
                }
                Values = {
                    DataSource = UDPReceiver
                    Type = uint32
		    NumberOfDimensions = 1
		    NumberOfElements = 1
                }
            }
            OutputSignals = {
                Times = {
                    DataSource = DDB1
                    Type = uint32
		    NumberOfDimensions = 1
		    NumberOfElements = 1
                }
                Values = {
                    DataSource = DDB1
                    Type = uint32
		    NumberOfDimensions = 1
		    NumberOfElements = 1
                }
            }
	}
        +GAMMDS = {
            Class = IOGAM
            InputSignals = {
                Times = {
                    DataSource = DDB1
                    Type = uint32
		    NumberOfElements = 1
                }
                Values = {
                    DataSource = DDB1
                    Type = uint32
		    NumberOfElements = 1
                }
            }
            OutputSignals = {
                Times = {
                    DataSource = MDSWriter_0
                    Type = uint32
		    NumberOfElements = 1
                }
                Values = {
                    DataSource = MDSWriter_0
                    Type = uint32
		    NumberOfElements = 1
                }
            }
        }
        +GAMDisplay = {
	    Class = IOGAM
	    InputSignals = {
		Times = {
		    DataSource = DDB1
		    Type = uint32
		    NumberOfElements = 1
		}
		Values = {
		    DataSource = DDB1
		    Type = uint32
		    NumberOfElements = 1
		}
	    }
	    OutputSignals = {
		Times = {
		    DataSource = LoggerDataSource
		    Type = uint32
		    NumberOfElements = 1
		}
		Values = {
		    DataSource = LoggerDataSource
		    Type = uint32
		    NumberOfElements = 1
		}
	    }
	}
    }
    +Data = {
        Class = ReferenceContainer
        DefaultDataSource = DDB1
        +DDB1 = {
            Class = GAMDataSource
        }
        +LoggerDataSource = {
            Class = LoggerDataSource
        }
        +Timings = {
            Class = TimingDataSource
        }
        +UDPReceiver = {
            Class = UDP::UDPReceiver
            Port = "5432" 
            ExecutionMode = RealTimeThread 
            CPUMask = 0x1
            StackSize = 10000000
            Signals = {
                Times = {
                    Type = uint32
                }
                Values = {
                    Type = uint32
                }
            }
        }
	+MDSWriter_0 = {
	    Class = MDSWriter
	    NumberOfBuffers = 100 //Compulsory. Number of buffers in the circular buffer defined above. Each buffer is capable of holding a copy of all the DataSourceI signals. 
	    CPUMask = 2 //Compulsory. Affinity assigned to the threads responsible for asynchronously flush data into the MDSplus database.
	    StackSize = 10000000 //Compulsory. Stack size of the thread above.
	    TreeName = "marte_mds" //Compulsory. Name of the MDSplus tree.
	    PulseNumber = -1 //Optional. If -1 a new pulse will be created and the MDSplus pulse number incremented.
	    StoreOnTrigger = 0 //Compulsory. If 0 all the data in the circular buffer is continuously stored. If 1 data is stored when the Trigger signal is 1 (see below).
	    EventName = "updatejScope" //Compulsory. Event sent to jScope when TimeRefresh seconds have elapsed.
	    TimeRefresh = 1 //Compulsory. An event with the name set in the property EventName is sent to jScope when TimeRefresh seconds have elapsed.

	    Signals = {
		Times = { //As many as required.
		    NodeName = "MDSTEST:TIMES" //Compulsory. MDSplus node name
		    Period = 0.005 //Compulsory. Period between signal samples.
		    AutomaticSegmentation = 1 // When set to 1 MDSplus::putRow() is used instead of MDSplus::makeSegment()
	        } 
		Values = { //As many as required.
		    NodeName = "MDSTEST:VALUE" //Compulsory. MDSplus node name
		    Period = 0.005 //Compulsory. Period between signal samples.
		    AutomaticSegmentation = 1 // When set to 1 MDSplus::putRow() is used instead of MDSplus::makeSegment()
	        } 
	    }
        }
    }
    +States = {
        Class = ReferenceContainer
        +Run = {
            Class = RealTimeState
            +Threads = {
                Class = ReferenceContainer
                +Thread1 = {
                    Class = RealTimeThread
                    CPUs = 0x1
                    Functions = {GAMUDP GAMMDS GAMDisplay}
		}
            }
        }
    }
    +Scheduler = {
        Class = GAMScheduler
        TimingDataSource = Timings
    }
}
