$TestApp = {
    Class = RealTimeApplication
    +Functions = {
        Class = ReferenceContainer
        +Clock = {
            Class = IOGAM
            InputSignals = {
                Counter = {
                    DataSource = Timer
                    Type = uint32
                }
                Time = {
                    Frequency = 5
                    DataSource = Timer
                    Type = uint32
                }
            }
            OutputSignals = {
                Counter = {
                    DataSource = DDB1
                    Type = uint32
                }
                Time = {
                    DataSource = DDB1
                    Type = uint32
                }
            }
        }

        +Sine = {
            Class = WaveformGAM::WaveformSin
            Amplitude = 1
            Frequency = 0.1
            Phase = 0
            Offset = 0
            InputSignals = {
                Time = {
                    Type = uint32
                    DataSource = DDB1
                }
            }
            OutputSignals = {
                sin = {
                    Type = float32
                    DataSource = DDB1
                }
            }
        }

        +Saw = {
            Class = WaveformGAM::WaveformPointsDef
            Points = {-1.0 -0.5 0 0.5 1.0}
            Times = {0.0 0.2 0.4 0.6 0.8}
            InputSignals = {
                Time = {
                    Type = uint32
                    DataSource = DDB1
                }
            }
            OutputSignals = {
                saw = {
                    Type = float32
                    DataSource = DDB1
                }
            }
        }

        +Square = {
            Class = WaveformGAM::WaveformPointsDef
            Points = {-1.0 -1.0 1.0 1.0}
            Times = {0.0 0.49999 0.5 1.0}
            InputSignals = {
                Time = {
                    Type = uint32
                    DataSource = DDB1
                }
            }
            OutputSignals = {
                squ = {
                    Type = float32
                    DataSource = DDB1
                }
            }
        }

	+Mux = {
	    Class = MuxGAM
	    InputSignals = {
		MuxSel = {
		    DataSource = DDB1
		    Type = uint32
		    NumberOfDimensions = 1
		}
		sin = {
		    DataSource = DDB1
		    Type = float32
		    NumberOfDimensions = 1
		}
		squ = {
		    DataSource = DDB1
		    Type = float32
		    NumberOfDimensions = 1
		}
		saw = {
		    DataSource = DDB1
		    Type = float32
		    NumberOfDimensions = 1
		}
	    }
	    OutputSignals = {
		sample = {
		    DataSource = DDB1
		    Type = float32
		    NumberOfDimensions = 1
		}
	    }
	}

	+Constants = {
	    Class = ConstantGAM
	    OutputSignals = {
		MuxSel = {
		    DataSource = DDB1
		    Type = uint32
		    NumberOfDimensions = 1
		    Default = {0}
		}
	    }
	}	

        +MDS = {
            Class = IOGAM
            InputSignals = {
                sample = {
                    DataSource = DDB1
                    Type = float32
                }
            }
            OutputSignals = {
                sample = {
                    DataSource = MDSWriter_0
                    Type = float32
                }
            }
        }
    }
	       
    +Data = {
        Class = ReferenceContainer
        DefaultDataSource = DDB1
        +DDB1 = {
            Class = GAMDataSource
        }
        +LoggerDataSource = {
            Class = LoggerDataSource
        }
        +Timings = {
            Class = TimingDataSource
        } 
        +Timer = {
            Class = LinuxTimer
            SleepNature = "Default"
            ExecutionMode = RealTimeThread
            Signals = {
                Counter = {
                    Type = uint32
                }
                Time = {
                    Type = uint32
                }
            }
        }

        +MDSWriter_0 = {
            Class = MDSWriter
            NumberOfBuffers = 100 //Compulsory. Number of buffers in the circular buffer defined above. Each buffer is capable of holding a copy of all the DataSourceI signals.
            CPUMask = 2 //Compulsory. Affinity assigned to the threads responsible for asynchronously flush data into the MDSplus database.
            StackSize = 10000000 //Compulsory. Stack size of the thread above.
            TreeName = "marte_mds" //Compulsory. Name of the MDSplus tree.
            PulseNumber = 300 //Optional. If -1 a new pulse will be created and the MDSplus pulse number incremented.
            StoreOnTrigger = 0 //Compulsory. If 0 all the data in the circular buffer is continuously stored. If 1 data is stored when the Trigger signal is 1 (see below).
            EventName = "updatejScope" //Compulsory. Event sent to jScope when TimeRefresh seconds have elapsed.
            TimeRefresh = 1 //Compulsory. An event with the name set in the property EventName is sent to jScope when TimeRefresh seconds have elapsed.

            Signals = {

                samples = { //As many as required.
                    NodeName = "MDSTEST:samples" //Compulsory. MDSplus node name
                    Period = 0.005 //Compulsory. Period between signal samples.
                    AutomaticSegmentation = 1 // When set to 1 MDSplus::putRow() is used instead of MDSplus::makeSegment()
                }
            }
        }
    }
    +States = {
        Class = ReferenceContainer
        +Run = {
            Class = RealTimeState
            +Threads = {
                Class = ReferenceContainer
                +Thread1 = {
                    Class = RealTimeThread
                    Functions = {Clock Constants Sine Saw Square Mux MDS}
		}
            }
        }
    }
    +Scheduler = {
        Class = GAMScheduler
        TimingDataSource = Timings
    }
}
